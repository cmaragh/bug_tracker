{"version":3,"sources":["Components/SearchSVG.js","Components/TopNav.js","Components/DeleteBugSVG.js","Components/BugHeaders.js","Components/BugDescription.js","Components/BugTimeStamp.js","Components/BugOpenedBy.js","Components/BugAssignedTo.js","Components/BugPriority.js","Components/BugStatus.js","Components/BugContainer.js","Components/AddBugButton.js","Components/AddBugConfirmation.js","Components/AddBugForm.js","Components/AddBugModal.js","Components/LoginForm.js","Pages/Home.js","Pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["SearchSVG","props","useState","searchActive","setSearchActive","searchText","setSearchText","searchHandler","searchCriteria","searchByDescription","fetch","method","headers","body","JSON","stringify","then","res","json","results","searchedBugsHandler","style","display","color","className","onSubmit","e","preventDefault","id","name","autoComplete","formAction","border","borderRadius","type","onChange","target","value","cursor","onClick","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","TopNav","Navbar","expand","backgroundColor","sticky","variant","Nav","Link","as","to","flexDirection","userDetails","firstName","lastName","substring","DeleteBugSVG","bugsString","bugsToDelete","forEach","bug","concat","length","bugsLoadedHandler","href","marginRight","textDecoration","BugHeaders","borderBottom","margin","flex","justifyContent","BugDescription","deleteBugsHandler","bind","_id","marginLeft","modalInfo","open","title","buttonText","initialDescription","description","initialAssignedTo","assignedto","initialPriority","priority","showModalHandler","BugTimeStamp","BugOpenedBy","openedBy","BugAssignedTo","assignedTo","BugPriority","fontWeight","BugStatus","status","BugContainer","openedByFirstName","openedByLastName","AddBugButton","modalHandler","AddBugConfirmation","class","version","x","y","enable-background","stroke-width","stroke-miterlimit","AddBugForm","showModal","setDescription","setAssignedTo","setPriority","confirm","setConfirm","Form","bugToAddOrUpdate","Authorization","sessionStorage","getItem","setTimeout","catch","err","console","log","Group","controlId","Control","required","placeholder","Label","Button","AddBugModal","Fragment","Modal","show","centered","onHide","Header","closeButton","Title","Body","LoginForm","email","setEmail","pw","setPw","pwConfirm","setPwConfirm","newUser","setNewUser","userExists","setUserExists","setFirstName","setLastName","loginHandler","credentials","setItem","token","showLoginHandler","showLogin","password","alert","Home","opacity","setOpacity","useEffect","bugsLoaded","setBugsLoaded","setBugsToDelete","setShowLogin","setShowModal","bugs","setBugs","withCredentials","result","renderBugs","userDetailsHandler","userData","renderedBugs","map","key","searchedBugs","bool","includes","index","indexOf","changedArray","splice","addToBugs","push","modalDetails","transition","Dashboard","App","setSearchedBugs","setUserDetails","exact","path","user","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5815945d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst SearchSVG = (props) => {\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const searchHandler = () => {\n    if (searchActive) {\n      const searchCriteria = {\n        searchByDescription: searchText,\n      };\n      fetch(\"/bugs/findbug\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify(searchCriteria),\n      })\n        .then((res) => res.json())\n        .then((results) => {\n          props.searchedBugsHandler(results.results);\n        });\n    }\n\n    setSearchActive(true);\n  };\n\n  const searchTextHandler = (e) => {\n    setSearchText(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    searchHandler();\n  };\n\n  return (\n    <div style={{ display: \"flex\", color: \"white\" }}>\n      {searchActive && (\n        <div className=\"px-3 m-auto\">\n          <form method=\"GET\" onSubmit={submitHandler}>\n            <input\n              id=\"searchBugs\"\n              name=\"searchBugs\"\n              autoComplete=\"off\"\n              formAction=\"/bugs\"\n              style={{ border: \"none\", borderRadius: \"10px\" }}\n              type=\"text\"\n              onChange={searchTextHandler}\n            ></input>\n          </form>\n        </div>\n      )}\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          searchHandler();\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"icon icon-tabler icon-tabler-search\"\n          width=\"44\"\n          height=\"44\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth=\"1.5\"\n          stroke=\"#fff\"\n          fill=\"none\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n          <circle cx=\"10\" cy=\"10\" r=\"7\" />\n          <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchSVG;\n","import React from \"react\";\nimport SearchSVG from \"./SearchSVG\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst TopNav = (props) => {\n  return (\n    <Navbar\n      expand=\"lg\"\n      style={{ backgroundColor: \"#FCB836\" }}\n      sticky=\"top\"\n      variant=\"dark\"\n    >\n      <Nav>\n        <Nav.Link as={Link} to=\"/\" className=\"px-3 m-auto\">\n          Home\n        </Nav.Link>\n\n        <Nav.Link as={Link} to=\"/dashboard\" className=\"px-3 m-auto\">\n          Dashboard\n        </Nav.Link>\n      </Nav>\n      <div\n        className=\"px-3 m-auto mr-0 ml-auto\"\n        style={{ display: \"flex\", flexDirection: \"row\" }}\n      >\n        <SearchSVG searchedBugsHandler={props.searchedBugsHandler} />\n        <div\n          className=\"px-3 m-auto\"\n          style={{ display: \"flex\", flexDirection: \"column\", color: \"white\" }}\n        >\n          <p className=\"m-0\">Logged in as</p>\n          <b className=\"m-0\">{`${\n            props.userDetails.firstName\n          } ${props.userDetails.lastName.substring(0, 1)}.`}</b>\n        </div>\n      </div>\n    </Navbar>\n  );\n};\n\nexport default TopNav;\n","import React from \"react\";\n\nconst DeleteBugSVG = (props) => {\n  const deleteSelectedBugs = () => {\n    let bugsString = \"\";\n    props.bugsToDelete.forEach((bug) => {\n      bugsString = bugsString.concat(`,${bug}`);\n    });\n    //Removes first comma\n    bugsString = bugsString.substring(1, bugsString.length);\n    //\n    fetch(`/bugs/${bugsString}`, {\n      method: \"DELETE\",\n    }).then((res) => props.bugsLoadedHandler(false));\n  };\n\n  return (\n    <a\n      onClick={deleteSelectedBugs}\n      href=\"#\"\n      style={{ marginRight: \"16px\", textDecoration: \"none\" }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"icon icon-tabler icon-tabler-trash\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        strokeWidth=\"1.5\"\n        stroke=\"red\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n        <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\n        <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n        <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n        <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n        <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n      </svg>\n    </a>\n  );\n};\n\nexport default DeleteBugSVG;\n","import React from \"react\";\nimport DeleteBugSVG from \"./DeleteBugSVG\";\n\nconst BugHeaders = (props) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        borderBottom: \"solid 2px\",\n        margin: \"2em\",\n      }}\n    >\n      <div style={{ flex: \"1\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <DeleteBugSVG\n            bugsToDelete={props.bugsToDelete}\n            bugsLoadedHandler={props.bugsLoadedHandler}\n          />\n          <h4>Bug Description</h4>\n        </div>\n      </div>\n      <div\n        style={{\n          flex: \"1.5\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n        }}\n      >\n        <h4>Created</h4>\n        <h4>Opened By</h4>\n        <h4>Assigned To</h4>\n        <h4>Priority</h4>\n        <h4>Status</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default BugHeaders;\n","import React from \"react\";\n\nconst BugDescription = (props) => {\n  const prepareInfoForModal = () => {\n    fetch(`/bugs/findbug/${props.bug._id}`)\n      .then((res) => res.json())\n      .then((bug) => {\n        const modalInfo = {\n          open: true,\n          method: \"PATCH\",\n          id: props.bug._id,\n          title: \"Update Bug\",\n          buttonText: \"Update Bug\",\n          initialDescription: bug.bug.description,\n          initialAssignedTo: bug.bug.assignedto,\n          initialPriority: bug.bug.priority\n        };\n        props.showModalHandler(modalInfo);\n      });\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <input\n        onClick={props.deleteBugsHandler.bind(this, props.bug._id)}\n        style={{ marginRight: \"25px\", marginLeft: \"5px\" }}\n        type=\"checkbox\"\n      ></input>\n      <a\n        href=\"#\"\n        onClick={prepareInfoForModal}\n        style={{ textDecoration: \"none\" }}\n      >\n        <h6>{props.description}</h6>\n      </a>\n    </div>\n  );\n};\n\nexport default BugDescription;\n","import React from \"react\";\n\nconst BugTimeStamp = (props) => {\n  return <h6>08/03/2020</h6>;\n};\n\nexport default BugTimeStamp;\n","import React from \"react\";\n\nconst BugOpenedBy = (props) => {\n  return <h6>{props.openedBy}</h6>;\n};\n\nexport default BugOpenedBy;\n","import React from \"react\";\n\nconst BugAssignedTo = (props) => {\nreturn <h6>{props.assignedTo}</h6>;\n};\n\nexport default BugAssignedTo;\n","import React from \"react\";\n\nconst BugPriority = (props) => {\n  const priorityStyle = () => {\n    return props.priority === \"Low\"\n      ? {\n          fontWeight: \"bold\",\n          color: \"#4643EC\",\n        }\n      : {\n          fontWeight: \"bold\",\n          color: \"#FF0000\",\n        };\n  };\n\n  return <h6 style={priorityStyle()}>{props.priority}</h6>;\n};\n\nexport default BugPriority;\n","import React from \"react\";\n\nconst BugStatus = (props) => {\n  return <h6>{props.status}</h6>;\n};\n\nexport default BugStatus;\n","import React from \"react\";\nimport BugDescription from \"./BugDescription\";\nimport BugTimeStamp from \"./BugTimeStamp\";\nimport BugOpenedBy from \"./BugOpenedBy\";\nimport BugAssignedTo from \"./BugAssignedTo\";\nimport BugPriority from \"./BugPriority\";\nimport BugStatus from \"./BugStatus\";\n\nconst BugContainer = (props) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        borderBottom: \"solid 1px #BABABA\",\n        margin: \"2em\",\n      }}\n    >\n      <div style={{ flex: \"1\" }}>\n        <BugDescription\n          description={props.bug.description}\n          bug={props.bug}\n          deleteBugsHandler={props.deleteBugsHandler}\n          showModalHandler={props.showModalHandler}\n        />\n      </div>\n      <div\n        style={{\n          flex: \"1.5\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n        }}\n      >\n        <BugTimeStamp />\n        <BugOpenedBy\n          openedBy={\n            typeof props.bug.openedByFirstName === \"undefined\"\n              ? \"Courtney M.\"\n              : `${\n                  props.bug.openedByFirstName\n                } ${props.bug.openedByLastName.substring(0, 1)}.`\n          }\n        />\n        <BugAssignedTo assignedTo={props.bug.assignedto} />\n        <BugPriority priority={props.bug.priority} />\n        <BugStatus status={props.bug.status} />\n      </div>\n    </div>\n  );\n};\n\nexport default BugContainer;\n","import React from \"react\";\nimport \"./AddBugButton.css\";\n\nconst AddBugButton = (props) => {\n  return (\n    <a href=\"#\" className=\"circle\" onClick={props.modalHandler}>\n      +\n    </a>\n  );\n};\n\nexport default AddBugButton;\n","import React from \"react\";\nimport \"./AddBugConfirmation.css\";\n\nconst AddBugConfirmation = (props) => {\n  return (\n    <div class=\"wrapper\">\n      <svg\n        version=\"1.1\"\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 98.5 98.5\"\n        enable-background=\"new 0 0 98.5 98.5\"\n      >\n        <path\n          class=\"checkmark\"\n          fill=\"none\"\n          stroke-width=\"8\"\n          stroke-miterlimit=\"10\"\n          d=\"M81.7,17.8C73.5,9.3,62,4,49.2,4\n\tC24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default AddBugConfirmation;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport AddBugConfirmation from \"./AddBugConfirmation\";\n\nconst AddBugForm = (props) => {\n  const [description, setDescription] = useState(\n    props.showModal.initialDescription\n  );\n  const [assignedTo, setAssignedTo] = useState(\n    props.showModal.initialAssignedTo\n  );\n  const [priority, setPriority] = useState(\"Low\");\n  const [confirm, setConfirm] = useState(false);\n\n  const changeDescriptionHandler = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const changeAssignedToHandler = (e) => {\n    setAssignedTo(e.target.value);\n  };\n\n  const changePriorityHandler = (e) => {\n    setPriority(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const bugToAddOrUpdate = {\n      description: description,\n      assignedto: assignedTo,\n      openedByFirstName: props.userDetails.firstName,\n      openedByLastName: props.userDetails.lastName,\n      priority: priority,\n    };\n\n    switch (props.showModal.method) {\n      case \"GET\":\n        fetch(\"/bugs\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${sessionStorage.getItem(\"tok\")}`,\n          },\n          body: JSON.stringify(bugToAddOrUpdate),\n        })\n          .then((res) => {\n            props.bugsLoadedHandler(false);\n            setConfirm(true);\n            setAssignedTo(\"\");\n            setDescription(\"\");\n            setTimeout(() => {\n              setConfirm(false);\n            }, 1500);\n          })\n          .catch((err) => console.log(err));\n          break;\n      case \"PATCH\":\n        console.log(bugToAddOrUpdate);\n        fetch(`/bugs/findbug/${props.showModal.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: JSON.stringify(bugToAddOrUpdate),\n        })\n          .then((res) => {\n            props.bugsLoadedHandler(false);\n            setConfirm(true);\n            setTimeout(() => {\n              setConfirm(false);\n            }, 1500);\n          })\n          .catch((err) => console.log(err));\n          break;\n    }\n  };\n\n  return (\n    <Form method=\"POST\" onSubmit={submitHandler}>\n      <Form.Group controlId=\"description\" name=\"description\">\n        <Form.Control\n          as=\"textarea\"\n          required={true}\n          placeholder=\"Description\"\n          autoComplete=\"off\"\n          value={description}\n          onChange={changeDescriptionHandler}\n        />\n      </Form.Group>\n      <br />\n      <Form.Group controlId=\"bugAssignedTo\">\n        <Form.Control\n          placeholder=\"Assign To\"\n          autoComplete=\"off\"\n          required={true}\n          value={assignedTo}\n          onChange={changeAssignedToHandler}\n        />\n      </Form.Group>\n\n      <br />\n      <Form.Group controlId=\"bugPriority\">\n        <Form.Label>Priority</Form.Label>\n        <Form.Control as=\"select\" onChange={changePriorityHandler}>\n          <option>Low</option>\n          <option>High</option>\n        </Form.Control>\n      </Form.Group>\n      <br />\n      <Button\n        style={{ backgroundColor: \"#FCB836\", border: \"none\" }}\n        type=\"submit\"\n      >\n        {props.showModal.buttonText}\n      </Button>\n      {confirm && <AddBugConfirmation />}\n    </Form>\n  );\n};\n\nexport default AddBugForm;\n","import React, { useState } from \"react\";\nimport AddBugButton from \"./AddBugButton\";\nimport AddBugForm from \"./AddBugForm\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst AddBugModal = (props) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () =>\n    props.showModalHandler({\n      open: false,\n      method: \"GET\",\n      id: null,\n      title: \"Create New Bug\",\n      buttonText: \"Add Bug\",\n      initialDescription: \"\",\n      initialAssignedTo: \"\",\n      initialPriority: null,\n    });\n  const handleShow = () =>\n    props.showModalHandler({\n      open: true,\n      method: \"GET\",\n      id: null,\n      title: \"Create New Bug\",\n      buttonText: \"Add Bug\",\n      initialDescription: \"\",\n      initialAssignedTo: \"\",\n      initialPriority: null,\n    });\n\n  const backgroundColor = {\n    backgroundColor: \"#FFE5B2\",\n  };\n\n  return (\n    <React.Fragment>\n      <AddBugButton modalHandler={handleShow} />\n\n      <Modal show={props.showModal.open} centered={true} onHide={handleClose}>\n        <Modal.Header closeButton style={backgroundColor}>\n          <Modal.Title>{props.showModal.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={backgroundColor}>\n          <AddBugForm\n            bugsLoadedHandler={props.bugsLoadedHandler}\n            showModal={props.showModal}\n            userDetails={props.userDetails}\n          />\n        </Modal.Body>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default AddBugModal;\n","import React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nconst LoginForm = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [pwConfirm, setPwConfirm] = useState(\"\");\n  const [newUser, setNewUser] = useState(false);\n  const [userExists, setUserExists] = useState();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const changeEmailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const changePwHandler = (e) => {\n    setPw(e.target.value);\n  };\n\n  const changePwConfirmHandler = (e) => {\n    setPwConfirm(e.target.value);\n  };\n\n  const changeFirstNameHandler = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  const changeLastNameHandler = (e) => {\n    setLastName(e.target.value);\n  };\n\n  const loginHandler = (credentials) => {\n    fetch(\"/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((res) => {\n        console.log(res);\n        return res.json();\n      })\n      .then((res) => {\n        console.log(res);\n        sessionStorage.setItem(\"tok\", res.token);\n        props.showLoginHandler(false);\n        setNewUser(false);\n      });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const credentials = {\n      email: email,\n      password: pw,\n    };\n\n    loginHandler(credentials);\n  };\n\n  const signupHandler = () => {\n    const credentials = {\n      email: email,\n      password: pw,\n      firstName: firstName,\n      lastName: lastName,\n    };\n\n    if (newUser) {\n      if (pw !== pwConfirm) {\n        alert(\"Passwords need to match!\");\n        return;\n      } else if (firstName === \"\" || lastName === \"\") {\n        alert(\"Please enter a First and Last Name for this user!\");\n        return;\n      } else {\n        fetch(\"/users/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: JSON.stringify(credentials),\n        })\n          .then((res) => {\n            if (res.status === 409) {\n              alert(\"Username already exists!\");\n              setUserExists(true);\n              return;\n            } else {\n              return res.json();\n            }\n          })\n          .then((res) => {\n            if (!userExists) {\n              console.log(res);\n              loginHandler(credentials);\n            }\n          })\n          .catch((err) => console.log(err));\n      }\n      return;\n    }\n\n    fetch(\"/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    }).then((res) => {\n      if (res.status === 200) {\n        alert(\"Username already exists!\");\n      } else {\n        setNewUser(true);\n      }\n    });\n  };\n\n  const backgroundColor = {\n    backgroundColor: \"#FFE5B2\",\n  };\n\n  return (\n    <React.Fragment>\n      <Modal show={props.showLogin} centered={true} onHide={() => {}}>\n        <Modal.Header closeButton style={backgroundColor}>\n          <Modal.Title>{newUser ? \"Sign Up\" : \"Login\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={backgroundColor}>\n          <Form method=\"POST\" onSubmit={submitHandler}>\n            <Form.Group controlId=\"loginEmail\">\n              <Form.Control\n                placeholder=\"E-mail\"\n                autoComplete=\"off\"\n                required={true}\n                onChange={changeEmailHandler}\n              />\n            </Form.Group>\n            <br />\n            <Form.Group controlId=\"loginPassword\">\n              <Form.Control\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n                type=\"password\"\n                onChange={changePwHandler}\n                required={true}\n              />\n            </Form.Group>\n\n            <br />\n            {newUser && (\n              <React.Fragment>\n                <Form.Group controlId=\"confirmLoginPassword\">\n                  <Form.Control\n                    placeholder=\"Confirm Password\"\n                    autoComplete=\"off\"\n                    type=\"password\"\n                    onChange={changePwConfirmHandler}\n                  />\n                </Form.Group>\n                <br />\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <Form.Group>\n                    <Form.Control\n                      placeholder=\"First Name\"\n                      autoComplete=\"off\"\n                      onChange={changeFirstNameHandler}\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Control\n                      placeholder=\"Last Name\"\n                      autoComplete=\"off\"\n                      onChange={changeLastNameHandler}\n                    />\n                  </Form.Group>\n                </div>\n                <br />\n              </React.Fragment>\n            )}\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Button\n                style={{ backgroundColor: \"#FCB836\", border: \"none\" }}\n                type=\"submit\"\n                value=\"login\"\n                name=\"login\"\n                onClick={() => {\n                  newUser && setNewUser(false);\n                }}\n              >\n                Login\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: \"white\",\n                  border: \"2px solid #FCB836\",\n                  fontWeight: \"10px\",\n                  color: \"#FCB836\",\n                }}\n                value=\"signup\"\n                name=\"signup\"\n                onClick={signupHandler}\n              >\n                Sign Up\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useEffect } from \"react\";\nimport BugHeaders from \"../Components/BugHeaders\";\nimport BugContainer from \"../Components/BugContainer\";\nimport AddBugModal from \"../Components/AddBugModal\";\nimport LoginForm from \"../Components/LoginForm\";\n\nconst Home = (props) => {\n  const [opacity, setOpacity] = useState(\"0\");\n  useEffect(() => {\n    setOpacity(\"1\");\n  }, []);\n\n  const [bugsLoaded, setBugsLoaded] = useState(false);\n  const [bugsToDelete, setBugsToDelete] = useState([]);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showModal, setShowModal] = useState({ open: false });\n  const [bugs, setBugs] = useState([]);\n\n  useEffect(() => {\n    if (!bugsLoaded && !showLogin) {\n      fetch(\"/bugs\", {\n        method: \"GET\",\n        withCredentials: true,\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem(\"tok\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => {\n          if (res.status === 401) {\n            setShowLogin(true);\n            return res.status;\n          }\n          return res.json();\n        })\n        .then((result) => {\n          if (result !== 401) {\n            renderBugs(result.bugs);\n            props.userDetailsHandler({\n              firstName: result.userData.firstName,\n              lastName: result.userData.lastName,\n            });\n            setBugsLoaded(true);\n          }\n        });\n    }\n  }, [bugsLoaded, showLogin]);\n\n  const renderBugs = (bugs) => {\n    const renderedBugs = bugs.map((bug) => {\n      return (\n        <BugContainer\n          bug={bug}\n          key={bug._id}\n          deleteBugsHandler={deleteBugsHandler}\n          showModalHandler={showModalHandler}\n        />\n      );\n    });\n\n    setBugs(renderedBugs);\n  };\n\n  useEffect(() => {\n    if (typeof props.searchedBugs !== \"undefined\") {\n      searchedBugsHandler(props.searchedBugs);\n    }\n  }, [props.searchedBugs]);\n\n  const searchedBugsHandler = (bugs) => {\n    renderBugs(bugs);\n  };\n\n  const bugsLoadedHandler = (bool) => {\n    setBugsLoaded(bool);\n  };\n\n  const showLoginHandler = (bool) => {\n    setShowLogin(bool);\n  };\n\n  const deleteBugsHandler = (id) => {\n    if (!bugsToDelete.includes(id)) {\n      const addToBugs = bugsToDelete;\n      addToBugs.push(id);\n      setBugsToDelete(addToBugs);\n    } else {\n      const index = bugsToDelete.indexOf(id);\n      const changedArray = bugsToDelete.splice(index, 1);\n      console.log(changedArray);\n      setBugsToDelete(changedArray);\n    }\n  };\n\n  const showModalHandler = (modalDetails) => {\n    setShowModal(modalDetails);\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ opacity: opacity, transition: \".8s\" }}>\n        <BugHeaders\n          bugsToDelete={bugsToDelete}\n          bugsLoadedHandler={bugsLoadedHandler}\n        />\n        {bugs}\n      </div>\n      <AddBugModal\n        bugsLoadedHandler={bugsLoadedHandler}\n        showModalHandler={showModalHandler}\n        showModal={showModal}\n        userDetails={props.userDetails}\n      />\n      <LoginForm\n        showLogin={showLogin}\n        showLoginHandler={showLoginHandler}\n        userDetailsHandler={props.userDetailsHandler}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\n\nconst Dashboard = (props) => {\n  const [opacity, setOpacity] = useState(\"0\");\n  useEffect(() => {\n    setOpacity(\"1\");\n  }, []);\n\n  return (\n    <div style={{ opacity: opacity, transition: \".8s\" }}>\n      <h1>Dashboard</h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport TopNav from \"./Components/TopNav\";\nimport Home from \"./Pages/Home\";\nimport Dashboard from \"./Pages/Dashboard\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [searchedBugs, setSearchedBugs] = useState([]);\n  const [userDetails, setUserDetails] = useState({\n    firstName: \"\",\n    lastName: \"\",\n  });\n\n  const searchedBugsHandler = (bugs) => {\n    setSearchedBugs(bugs);\n  };\n\n  const userDetailsHandler = (user) => {\n    setUserDetails(user);\n  };\n\n  return (\n    <Router>\n      <TopNav\n        searchedBugsHandler={searchedBugsHandler}\n        userDetails={userDetails}\n      />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home\n            searchedBugs={searchedBugs}\n            userDetails={userDetails}\n            userDetailsHandler={userDetailsHandler}\n          />\n        </Route>\n        <Route>\n          <Dashboard exact path=\"/dashboard\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}